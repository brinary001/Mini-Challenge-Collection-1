//: Playground - noun: a place where people can play

import UIKit

enum StudentYear: Int {
    case freshman, sophomore, junior, senior
}

struct Student {
    let firstName: String
    let lastName: String
    let id: Int
    let year: StudentYear
    let grade: Int
    
    init(firstName: String, lastName: String) {
        self.firstName = firstName
        self.lastName = lastName
        self.id  = Int(arc4random_uniform(1000))
        self.year = StudentYear(rawValue: Int(arc4random_uniform(4))) ?? .freshman
        self.grade = Int(arc4random_uniform(101))
    }

}

var students: [Student] = [
    Student(firstName: "Sterling", lastName: "Archer"),
    Student(firstName: "Lana", lastName: "Kane"),
    Student(firstName: "Cheryl", lastName: "Tunt"),
    Student(firstName: "Pam", lastName: "Poovey"),
    Student(firstName: "Cyril", lastName: "Figgis"),
    Student(firstName: "Ray", lastName: "Gillette"),
    Student(firstName: "Malory", lastName: "Archer"),
    Student(firstName: "Barry", lastName: "Dillon"),
    Student(firstName: "Ron", lastName: "Cadillac"),
    Student(firstName: "Ross", lastName: "Geller"),
    Student(firstName: "Chandler", lastName: "Bing"),
    Student(firstName: "Rachel", lastName: "Green"),
    Student(firstName: "Joey", lastName: "Tribbiani"),
    Student(firstName: "Monica", lastName: "Geller"),
    Student(firstName: "Phoebe", lastName: "Buffay")
]

// TODO: - Create an array that contains only the freshmen from the student array using the filter function

    let freshmenArr = students.filter{ $0.year == .freshman }

//Testing & Notes ⬇️⬇️⬇️
    print(freshmenArr) // 👍🏻 Perfect!  The new array created above is of type Student (the data structure defined at the top)
                      //and only fetches the students affixed with the 'freshman' StudentYear enum case that's autogenerated
                     //in the struct's initializer.

// TODO: - Create an array that contains only the full names (first name concatenated with the last name) from the student array using the map function

    let namesArr = students.map{ $0.firstName + " " + $0.lastName } //Adding a space in the middle of the concatenation for easier readability

    //Testing & Notes ⬇️⬇️⬇️
    print("\n")
    print(namesArr)  //Works just as expected 🙂

// TODO: - Return the average grade from all the students using the reduce function divided by the count


//    let grades = students.reduce(.grade, +)
//
//    print("\n")
//    print(grades)

// I'm getting an error "Reference to member 'grade' cannot be resolved without a contextual type"
// I've tried everything I can think of to do this the way I'm being asked and am finally accepting that I'll have to wait for the solution to see how it should be done
// Errrrgh 😤
